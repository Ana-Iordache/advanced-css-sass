.row {
    /* if we have enough available space it will have the width that we specified
     if not and the viewport is smaller the specified width, it will fill 100% of the available space */
    max-width: $grid-width;
    margin: 0 auto; /* center a block element inside another block element */
    
    &:not(:last-child) {
        margin-bottom: $gutter-vertical;
    }

    // the row will have 0px height because the children are floated, and the height collapses -> cleafix
    @include clearfix;

    /*
        ^ -> starts with
        * -> contains
        $ -> ends with
    */
    [class^="col-"] {
        float: left;

        &:not(:last-child) {
            margin-right: $gutter-horizontal;
        }
    }

    .col-1-of-2 {
        width: calc((100% - #{$gutter-horizontal}) / 2);
        /*
            we can do also operations in sass, but we cannot do them with multiple units (for e.g. rem with px)
            because we complie our sass file while we're developing our page, so even before the page is served to the user
            and this kind of calculations depends on the layout, so it has to happen while the website is rendered using the visual formatting model
            so that's when the calculations can occur beacuse then the css and the browser knows what the %, rem, px etc are
        */
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    .col-2-of-3 {
        width: calc( 2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal} );
        /*
            (100% - 2 * #{$gutter-horizontal}) / 3 -> the width of one 'col-1-of-3' column
            multiply by 2 because we have 2 columns
            and then add the gutter width
        */
    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-4 {
        width: calc( 2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal} );
    }

    .col-3-of-4 {
        width: calc( 3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal} );
    }
}