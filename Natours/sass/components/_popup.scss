.popup {
    position: fixed;
    background-color: rgba($color-black, .8);
    width: 100vw;
    height: 100vh;
    top: 0;
    left: 0;
    z-index: 9999;
    opacity: 0;
    visibility: hidden;
    transition: all .3s;

    &__content {
        width: 75%;
        background-color: $color-white;
        box-shadow: 0 2rem 4rem rgba($color-black, .4);
        position: fixed;
        @include centerHorizontalVertical;
        border-radius: 3px;
        display: table;
        overflow: hidden;

        opacity: 0;
        transform: translate(-50%, -50%) scale(.25); // we already have another transform coming from the mixin, which will be lost, so we have to specify it again
        transition: all .4s .2s; // .2s for the delay, in order the background to appear first

        @include respond(tab-land) {
            display: flex;
            flex-direction: column;
        }
    }

    &__left {
        width: 33.333333%;
        display: table-cell;

        @include respond(tab-land) {
            display: flex;
            width: 100%;
        }
    }

    &__right {
        width: 66.6666667%;
        display: table-cell; // to give both sides the same height
        vertical-align: middle;
        padding: 3rem 5rem;

        @include respond(tab-land) {
            width: 100%;
        }

        @include respond(phone) {
            padding: 1.5rem 3rem;
        }
    }

    &__img {
        display: block;
        width: 100%;

        @include respond(tab-land) {
            width: 50%;
        }
    }

    &__text {
        font-size: 1.4rem;
        margin-bottom: 4rem;

        -moz-column-count: 2;
        -moz-column-gap: 4rem; 
        -moz-column-rule: 1px solid $color-gray-light-2;

        column-count: 2;
        column-gap: 4rem; //  the default is 1em = 14px (the font-size of the current element)
        column-rule: 1px solid $color-gray-light-2; // vertical line between columns

        -moz-hyphens: auto; 
        -ms-hyphens: auto; 
        -webkit-hyphens: auto; 
        hyphens: auto; // in order to this to work, we must have set lang on html tag

        @include respond(phone) {
            column-count: 1;
        }
    }


    // Open states
    // applies to the element which is the target (set in href)
    // we set the id of popup and then we specified the target in anchors href (#popup)
    &:target {
        opacity: 1;
        visibility: visible;
    }

    // when the popup becomes the target
    // to get that 'coming towards' the user effect when popup opens
    // first set the initial state for content
    &:target &__content {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }

    &__close {
        &:link,
        &:visited {
            color: $color-gray-dark;
            position: absolute;
            top: 2.5rem;
            right: 2.5rem;
            font-size: 3rem;
            text-decoration: none;
            display: inline-block;
            transition: all .2s;
            line-height: 1; // because it inherits the 1.7 set on the body
        }

        &:hover {
            color: $color-primary;
        }
    }
}